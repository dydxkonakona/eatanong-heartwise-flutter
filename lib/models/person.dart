import "package:hive/hive.dart";

/*
This line is a Dart directive that tells the compiler 
to include the generated code from the person.g.dart file.
The .g.dart file is generated by the Hive package and contains the necessary code 
to serialize and deserialize the Person class.
*/
part "person.g.dart";

/*
This line is an annotation that tells Hive that the Person class is a type that can be stored in the database.
The typeId parameter is a unique identifier for this type, which is used by Hive to distinguish it from other types.
*/
@HiveType(typeId: 1)
// This line defines a new class named Person.
class Person {
  // This line defines a constructor for the Person class that takes a map of named arguments.
  Person({
    // This line defines a named argument name that is required when creating a new Person object.
    // The this keyword is used to refer to the name property of the Person class.
    required this.name, 
    // This line defines a named argument age that is required when creating a new Person object.
    required this.age,
    required this.gender,
    required this.weight,
    required this.height
  });
  // This line is an annotation that tells Hive that the name property should be stored in the database with the field ID 0.
  @HiveField(0)
  // This line defines a property named name of type String.
  String name;

  // This line is an annotation that tells Hive that the age property should be stored in the database with the field ID 1.
  @HiveField(1)
  // This line defines a property named age of type int.
  int age;

  @HiveField(2)
  String gender;

  @HiveField(3)
  double weight;

  @HiveField(4)
  double height;
}

/*
Note that the @HiveType and @HiveField annotations are used 
to configure how the Person class is serialized and deserialized by Hive. 
The typeId and field IDs are used to identify the type and properties of the class in the database.
*/